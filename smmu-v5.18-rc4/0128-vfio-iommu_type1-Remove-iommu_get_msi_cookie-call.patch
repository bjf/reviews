From 21852d783192660fa6709dd09518a0697cd98ee6 Mon Sep 17 00:00:00 2001
From: Nicolin Chen <nicolinc@nvidia.com>
Date: Wed, 6 Jul 2022 19:34:40 -0700
Subject: [PATCH 128/141] vfio/iommu_type1: Remove iommu_get_msi_cookie call

Now msi_cookie is handled in the SMMU drivers, so clean this up in VFIO.

Change-Id: I17b56a8d01bc3b197d5ec713743c3f681f1a9003
Signed-off-by: Nicolin Chen <nicolinc@nvidia.com>

1	36	drivers/vfio/vfio_iommu_type1.c

diff --git a/drivers/vfio/vfio_iommu_type1.c b/drivers/vfio/vfio_iommu_type1.c
index c13b9290e357..6f815f36d228 100644
--- a/drivers/vfio/vfio_iommu_type1.c
+++ b/drivers/vfio/vfio_iommu_type1.c
@@ -1904,32 +1904,6 @@ vfio_iommu_find_iommu_group(struct vfio_iommu *iommu,
 	return NULL;
 }
 
-static bool vfio_iommu_has_sw_msi(struct list_head *group_resv_regions,
-				  phys_addr_t *base)
-{
-	struct iommu_resv_region *region;
-	bool ret = false;
-
-	list_for_each_entry(region, group_resv_regions, list) {
-		/*
-		 * The presence of any 'real' MSI regions should take
-		 * precedence over the software-managed one if the
-		 * IOMMU driver happens to advertise both types.
-		 */
-		if (region->type == IOMMU_RESV_MSI) {
-			ret = false;
-			break;
-		}
-
-		if (region->type == IOMMU_RESV_SW_MSI) {
-			*base = region->start;
-			ret = true;
-		}
-	}
-
-	return ret;
-}
-
 /*
  * This is a helper function to insert an address range to iova list.
  * The list is initially created with a single entry corresponding to
@@ -2160,8 +2134,7 @@ static int vfio_iommu_type1_attach_group(void *iommu_data,
 	struct vfio_iommu_group *group;
 	struct vfio_domain *domain, *d;
 	struct bus_type *bus = NULL;
-	bool resv_msi, msi_remap;
-	phys_addr_t resv_msi_base = 0;
+	bool msi_remap;
 	struct iommu_domain_geometry *geo;
 	LIST_HEAD(iova_copy);
 	LIST_HEAD(group_resv_regions);
@@ -2252,8 +2225,6 @@ static int vfio_iommu_type1_attach_group(void *iommu_data,
 	if (ret)
 		goto out_detach;
 
-	resv_msi = vfio_iommu_has_sw_msi(&group_resv_regions, &resv_msi_base);
-
 	INIT_LIST_HEAD(&domain->group_list);
 	list_add(&group->next, &domain->group_list);
 
@@ -2311,12 +2282,6 @@ static int vfio_iommu_type1_attach_group(void *iommu_data,
 	if (ret)
 		goto out_detach;
 
-	if (resv_msi) {
-		ret = iommu_get_msi_cookie(domain->domain, resv_msi_base);
-		if (ret && ret != -ENODEV)
-			goto out_detach;
-	}
-
 	list_add(&domain->next, &iommu->domain_list);
 	vfio_update_pgsize_bitmap(iommu);
 done:
-- 
2.34.1

