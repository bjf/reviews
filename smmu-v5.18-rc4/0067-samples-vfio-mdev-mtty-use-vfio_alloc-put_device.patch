From f535338daa4d2286f68649378fec7def4057d60c Mon Sep 17 00:00:00 2001
From: Yi Liu <yi.l.liu@intel.com>
Date: Mon, 22 Nov 2021 17:33:00 +0800
Subject: [PATCH 067/141] samples/vfio-mdev/mtty: use vfio_alloc/put_device

Uses vfio_alloc/put_device for the mdev_state allocation, and moves
the vconfig free of struct mdev_state into the mtty_release().

Signed-off-by: Yi Liu <yi.l.liu@intel.com>

16	13	samples/vfio-mdev/mtty.c

diff --git a/samples/vfio-mdev/mtty.c b/samples/vfio-mdev/mtty.c
index 5dc1b6a4c02c..6adb8253505f 100644
--- a/samples/vfio-mdev/mtty.c
+++ b/samples/vfio-mdev/mtty.c
@@ -716,14 +716,13 @@ static int mtty_probe(struct mdev_device *mdev)
 	} while (!atomic_try_cmpxchg(&mdev_avail_ports,
 				     &avail_ports, avail_ports - nr_ports));
 
-	mdev_state = kzalloc(sizeof(struct mdev_state), GFP_KERNEL);
+	mdev_state = vfio_alloc_device(mdev_state, vdev,
+				       &mdev->dev, &mtty_dev_ops);
 	if (mdev_state == NULL) {
 		ret = -ENOMEM;
 		goto err_nr_ports;
 	}
 
-	vfio_init_group_dev(&mdev_state->vdev, &mdev->dev, &mtty_dev_ops);
-
 	mdev_state->nr_ports = nr_ports;
 	mdev_state->irq_index = -1;
 	mdev_state->s[0].max_fifo_size = MAX_FIFO_SIZE;
@@ -733,7 +732,7 @@ static int mtty_probe(struct mdev_device *mdev)
 
 	if (mdev_state->vconfig == NULL) {
 		ret = -ENOMEM;
-		goto err_state;
+		goto err_out;
 	}
 
 	mutex_init(&mdev_state->ops_lock);
@@ -743,15 +742,12 @@ static int mtty_probe(struct mdev_device *mdev)
 
 	ret = vfio_register_emulated_iommu_dev(&mdev_state->vdev);
 	if (ret)
-		goto err_vconfig;
+		goto err_out;
 	dev_set_drvdata(&mdev->dev, mdev_state);
 	return 0;
 
-err_vconfig:
-	kfree(mdev_state->vconfig);
-err_state:
-	vfio_uninit_group_dev(&mdev_state->vdev);
-	kfree(mdev_state);
+err_out:
+	vfio_put_device(&mdev_state->vdev);
 err_nr_ports:
 	atomic_add(nr_ports, &mdev_avail_ports);
 	return ret;
@@ -763,11 +759,17 @@ static void mtty_remove(struct mdev_device *mdev)
 	int nr_ports = mdev_state->nr_ports;
 
 	vfio_unregister_group_dev(&mdev_state->vdev);
+	vfio_put_device(&mdev_state->vdev);
+	atomic_add(nr_ports, &mdev_avail_ports);
+}
+
+
+static void mtty_release(struct vfio_device *vdev)
+{
+	struct mdev_state *mdev_state =
+		container_of(vdev, struct mdev_state, vdev);
 
 	kfree(mdev_state->vconfig);
-	vfio_uninit_group_dev(&mdev_state->vdev);
-	kfree(mdev_state);
-	atomic_add(nr_ports, &mdev_avail_ports);
 }
 
 static int mtty_reset(struct mdev_state *mdev_state)
@@ -1305,6 +1307,7 @@ static struct attribute_group *mdev_type_groups[] = {
 
 static const struct vfio_device_ops mtty_dev_ops = {
 	.name = "vfio-mtty",
+	.release = mtty_release,
 	.read = mtty_read,
 	.write = mtty_write,
 	.ioctl = mtty_ioctl,
-- 
2.34.1

